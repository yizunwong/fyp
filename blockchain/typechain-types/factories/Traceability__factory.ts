/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { Traceability, TraceabilityInterface } from "../Traceability.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "string",
        "name": "batchId",
        "type": "string"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "farmer",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "produceHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "qrHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "ProduceRecorded",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "batchId",
        "type": "string"
      }
    ],
    "name": "getProduce",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "batchId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "produceHash",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "qrHash",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "farmer",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "internalType": "struct Traceability.Produce",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "batchId",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "produceHash",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "qrHash",
        "type": "string"
      }
    ],
    "name": "recordProduce",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "batchId",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "hashToCheck",
        "type": "string"
      }
    ],
    "name": "verifyProduce",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f80fd5b50610a338061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806305fe5069146100435780638f4a333b1461006b578063ddf2402514610080575b5f80fd5b6100566100513660046105fb565b6100a0565b60405190151581526020015b60405180910390f35b61007e61007936600461065b565b610157565b005b61009361008e3660046106dd565b6102bf565b6040516100629190610764565b5f80836040516100b091906107e4565b90815260405190819003602001902080546100ca906107ff565b90505f036101115760405162461bcd60e51b815260206004820152600f60248201526e10985d18da081b9bdd08199bdd5b99608a1b60448201526064015b60405180910390fd5b81805190602001205f8460405161012891906107e4565b90815260200160405180910390206001016040516101469190610837565b604051809103902014905092915050565b5f8360405161016691906107e4565b9081526040519081900360200190208054610180906107ff565b1590506101c85760405162461bcd60e51b815260206004820152601660248201527510985d18da08185b1c9958591e481c9958dbdc99195960521b6044820152606401610108565b6040805160a08101825284815260208101849052808201839052336060820152426080820152905181905f906101ff9087906107e4565b9081526040519081900360200190208151819061021c90826108f7565b506020820151600182019061023190826108f7565b506040820151600282019061024690826108f7565b5060608201516003820180546001600160a01b0319166001600160a01b0390921691909117905560809091015160049091015560405133907f9d2e799931ec8cabfea8205aafdbabd268fb169e13524142d6734a5f7f521600906102b19087908790879042906109b3565b60405180910390a250505050565b6102f86040518060a001604052806060815260200160608152602001606081526020015f6001600160a01b031681526020015f81525090565b5f8260405161030791906107e4565b9081526040519081900360200190208054610321906107ff565b90505f036103635760405162461bcd60e51b815260206004820152600f60248201526e10985d18da081b9bdd08199bdd5b99608a1b6044820152606401610108565b5f8260405161037291906107e4565b90815260200160405180910390206040518060a00160405290815f8201805461039a906107ff565b80601f01602080910402602001604051908101604052809291908181526020018280546103c6906107ff565b80156104115780601f106103e857610100808354040283529160200191610411565b820191905f5260205f20905b8154815290600101906020018083116103f457829003601f168201915b5050505050815260200160018201805461042a906107ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610456906107ff565b80156104a15780601f10610478576101008083540402835291602001916104a1565b820191905f5260205f20905b81548152906001019060200180831161048457829003601f168201915b505050505081526020016002820180546104ba906107ff565b80601f01602080910402602001604051908101604052809291908181526020018280546104e6906107ff565b80156105315780601f1061050857610100808354040283529160200191610531565b820191905f5260205f20905b81548152906001019060200180831161051457829003601f168201915b505050918352505060038201546001600160a01b0316602082015260049091015460409091015292915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610581575f80fd5b813567ffffffffffffffff8082111561059c5761059c61055e565b604051601f8301601f19908116603f011681019082821181831017156105c4576105c461055e565b816040528381528660208588010111156105dc575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f806040838503121561060c575f80fd5b823567ffffffffffffffff80821115610623575f80fd5b61062f86838701610572565b93506020850135915080821115610644575f80fd5b5061065185828601610572565b9150509250929050565b5f805f6060848603121561066d575f80fd5b833567ffffffffffffffff80821115610684575f80fd5b61069087838801610572565b945060208601359150808211156106a5575f80fd5b6106b187838801610572565b935060408601359150808211156106c6575f80fd5b506106d386828701610572565b9150509250925092565b5f602082840312156106ed575f80fd5b813567ffffffffffffffff811115610703575f80fd5b61070f84828501610572565b949350505050565b5f5b83811015610731578181015183820152602001610719565b50505f910152565b5f8151808452610750816020860160208601610717565b601f01601f19169290920160200192915050565b602081525f825160a0602084015261077f60c0840182610739565b90506020840151601f198085840301604086015261079d8383610739565b92506040860151915080858403016060860152506107bb8282610739565b91505060018060a01b036060850151166080840152608084015160a08401528091505092915050565b5f82516107f5818460208701610717565b9190910192915050565b600181811c9082168061081357607f821691505b60208210810361083157634e487b7160e01b5f52602260045260245ffd5b50919050565b5f808354610844816107ff565b6001828116801561085c57600181146108715761089d565b60ff198416875282151583028701945061089d565b875f526020805f205f5b858110156108945781548a82015290840190820161087b565b50505082870194505b50929695505050505050565b601f8211156108f2575f81815260208120601f850160051c810160208610156108cf5750805b601f850160051c820191505b818110156108ee578281556001016108db565b5050505b505050565b815167ffffffffffffffff8111156109115761091161055e565b6109258161091f84546107ff565b846108a9565b602080601f831160018114610958575f84156109415750858301515b5f19600386901b1c1916600185901b1785556108ee565b5f85815260208120601f198616915b8281101561098657888601518255948401946001909101908401610967565b50858210156109a357878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b608081525f6109c56080830187610739565b82810360208401526109d78187610739565b905082810360408401526109eb8186610739565b9150508260608301529594505050505056fea2646970667358221220b4cf8e59ba848ea0b07d7384a9312c5a291ad998b183ffe9ddaeb9746a4be14464736f6c63430008140033";

  
      type TraceabilityConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: TraceabilityConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Traceability__factory extends ContractFactory {
    
      constructor(...args: TraceabilityConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<Traceability & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Traceability__factory {
      return super.connect(runner) as Traceability__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): TraceabilityInterface {
      return new Interface(_abi) as TraceabilityInterface;
    }
    
    override attach(address: string | Addressable): Traceability {
      return super.attach(address) as Traceability;
    }
  static connect(address: string, runner?: ContractRunner | null): Traceability {
      return new Contract(address, _abi, runner) as unknown as Traceability;
    }
  }

  
  